/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ItemCreateNestedManyWithoutOrdersInput } from "./ItemCreateNestedManyWithoutOrdersInput";
import { ValidateNested, IsOptional, IsNumber, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { OrderCreateNestedManyWithoutOrdersInput } from "./OrderCreateNestedManyWithoutOrdersInput";
import { OrderWhereUniqueInput } from "./OrderWhereUniqueInput";
import { EnumOrderStatus } from "./EnumOrderStatus";
@InputType()
class OrderCreateInput {
  @ApiProperty({
    required: false,
    type: () => ItemCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => ItemCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => ItemCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  items?: ItemCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => OrderCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => OrderCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => OrderCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  orders?: OrderCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
    type: () => OrderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => OrderWhereUniqueInput)
  @IsOptional()
  @Field(() => OrderWhereUniqueInput, {
    nullable: true,
  })
  owner?: OrderWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumOrderStatus,
  })
  @IsEnum(EnumOrderStatus)
  @IsOptional()
  @Field(() => EnumOrderStatus, {
    nullable: true,
  })
  status?: "Accepted" | "InProrgres" | "Done" | null;
}
export { OrderCreateInput };
